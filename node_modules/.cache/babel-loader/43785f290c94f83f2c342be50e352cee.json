{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea Andrei\\\\REACT\\\\exercise\\\\my-app-official\\\\src\\\\ProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport FormComponent from './components/FormComponent';\nimport \"./projectForm.css\";\nimport WishesComponent from './components/WishesComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProjectForm() {\n  _s();\n\n  const getFromLocalstorage = key => {\n    const items = localStorage.getItem(key);\n    if (items) return JSON.parse(items);\n    return null;\n  };\n\n  const [wishes, setWishes] = useState(getFromLocalstorage('list'));\n  const [todoWish, setTodoWish] = useState('');\n  /* ce wish introduc  in input*/\n\n  const [todoWishRon, setTodoWishRon] = useState('');\n  /* ce wish RON introduc  in input*/\n\n  const [totalAmount, setTotalAmount] = useState(getFromLocalstorage('startAmount'));\n  const [startAmount, setStartAmount] = useState(getFromLocalstorage('startAmount')); //after render, and after the component is changed\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(wishes));\n  }, [wishes]);\n  useEffect(() => {\n    localStorage.setItem(\"startAmount\", JSON.stringify(startAmount));\n  }, [startAmount]);\n  useEffect(() => {\n    localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  }, [totalAmount]);\n\n  function random() {\n    return Math.floor(Math.random() * 50444);\n  }\n\n  function addWishSubmit(obj) {\n    /* adaug in vector dorinta si banii */\n    e.preventDefault();\n    setWishes([...wishes, {\n      wishText: todoWish,\n      money: todoWishRon,\n      id: random(),\n      startWish: false,\n      finishWish: false,\n      delete: false,\n      edit: false\n    }]);\n    setTodoWish('');\n    setTodoWishRon('');\n  }\n\n  function startwish(id) {\n    const _wishes = wishes.map(wish => {\n      if (wish.id === id) {\n        if (!wish.startWish) {\n          /* daca e false , adaugam la startAmount */\n          setStartAmount(parseInt(wish.money) + startAmount);\n          setTotalAmount(parseInt(wish.money) + totalAmount);\n          return { ...wish,\n            startWish: !wish.startWish\n          };\n        }\n      }\n      /*daca startWish e true, atunci schimbam valoarea */\n\n\n      return wish;\n      /* daca nu, returnam si se va forma tot un array de obiecte */\n    });\n\n    setWishes(_wishes);\n    /* vom updata array ul de obiecte cu noul array de obiecte */\n  }\n\n  function finishWish(id) {\n    const finish = wishes.map(wish => {\n      if (wish.id === id) {\n        if (wish.startWish && !wish.finishWish) {\n          setStartAmount(startAmount - wish.money);\n          return { ...wish,\n            finishWish: !wish.finishWish\n          };\n        }\n      }\n\n      return wish;\n    });\n    setWishes(finish);\n  }\n\n  function deleteWish(id) {\n    const _wishes = wishes.filter(wish => wish.id !== id); //selectam wishes ca sa scapam de wish ul cu id pe care vrem sa l stergem \n\n\n    const deletedWish = wishes.find(wish => wish.id === id);\n    setWishes(_wishes);\n\n    if (deletedWish.finishWish) {\n      setTotalAmount(totalAmount - deletedWish.money);\n      console.log(\"prima\");\n    }\n\n    if (deletedWish.startWish && !deletedWish.finishWish) {\n      setTotalAmount(totalAmount - deletedWish.money);\n      setStartAmount(startAmount - deletedWish.money);\n      console.log(\"doi\");\n    }\n  }\n\n  function editWish(id) {\n    const _wishes = wishes.map(wish => {\n      if (wish.id === id) {\n        return { ...wish,\n          edit: true,\n          wishText: wish.wishText\n        };\n      }\n\n      return wish;\n    });\n\n    setWishes(_wishes);\n  }\n\n  function editInputWish(e, id) {\n    /* pentru a schimba valoarea inputului (onChange) */\n    const _wishes = wishes.map(wish => {\n      if (wish.id === id) {\n        return { ...wish,\n          edit: true,\n          wishText: e.target.value\n        };\n      }\n\n      return wish;\n    });\n\n    setWishes(_wishes);\n  }\n\n  function setUpdateWish(id) {\n    const update = wishes.map(wish => {\n      if (wish.id === id) {\n        return { ...wish,\n          edit: false\n        };\n      }\n\n      return wish;\n    });\n    setWishes(update);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      startAmount: startAmount,\n      totalAmount: totalAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wish List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FormComponent, {\n          addWishSubmit: addWishSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WishesComponent, {\n          editInputWish: editInputWish,\n          setUpdateWish: setUpdateWish,\n          wishes: wishes,\n          startwish: startwish,\n          editWish: editWish,\n          deleteWish: deleteWish,\n          finishWish: finishWish\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProjectForm, \"GkgHJjKqcIl4uZ5y7TRcpaC/png=\");\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["C:/Users/Andreea Andrei/REACT/exercise/my-app-official/src/ProjectForm.js"],"names":["React","useState","useEffect","Header","FormComponent","WishesComponent","ProjectForm","getFromLocalstorage","key","items","localStorage","getItem","JSON","parse","wishes","setWishes","todoWish","setTodoWish","todoWishRon","setTodoWishRon","totalAmount","setTotalAmount","startAmount","setStartAmount","setItem","stringify","random","Math","floor","addWishSubmit","obj","e","preventDefault","wishText","money","id","startWish","finishWish","delete","edit","startwish","_wishes","map","wish","parseInt","finish","deleteWish","filter","deletedWish","find","console","log","editWish","editInputWish","target","value","setUpdateWish","update"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Header from './components/Header';\r\nimport FormComponent from './components/FormComponent'\r\nimport \"./projectForm.css\"\r\nimport WishesComponent from './components/WishesComponent';\r\n\r\nfunction ProjectForm() {\r\n\r\n\r\n    const getFromLocalstorage = (key) => {\r\n        const items = localStorage.getItem(key);\r\n        if (items)\r\n            return JSON.parse(items)\r\n        return null\r\n    }\r\n    const [wishes, setWishes] = useState(getFromLocalstorage('list'));\r\n    const [todoWish, setTodoWish] = useState('')  /* ce wish introduc  in input*/\r\n    const [todoWishRon, setTodoWishRon] = useState('')  /* ce wish RON introduc  in input*/\r\n    const [totalAmount, setTotalAmount] = useState(getFromLocalstorage('startAmount'))\r\n    const [startAmount, setStartAmount] = useState(getFromLocalstorage('startAmount'))\r\n  \r\n\r\n    //after render, and after the component is changed\r\n    useEffect(() => {\r\n        localStorage.setItem(\"list\", JSON.stringify(wishes))\r\n    }, [wishes])\r\n    useEffect(() => {\r\n        localStorage.setItem(\"startAmount\", JSON.stringify(startAmount))\r\n    }, [startAmount])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount))\r\n    }, [totalAmount])\r\n\r\n\r\n    function random() {\r\n        return Math.floor(Math.random() * 50444);\r\n    }\r\n\r\n    function addWishSubmit(obj) {   /* adaug in vector dorinta si banii */\r\n        e.preventDefault()\r\n        setWishes([\r\n            ...wishes,\r\n            {\r\n                wishText: todoWish,\r\n                money: todoWishRon,\r\n                id: random(),\r\n                startWish: false,\r\n                finishWish: false,\r\n                delete: false,\r\n                edit: false\r\n            }\r\n        ])\r\n        setTodoWish('')\r\n        setTodoWishRon('')\r\n    }\r\n\r\n\r\n    function startwish(id) {\r\n        const _wishes = wishes.map((wish) => {\r\n            if (wish.id === id) {\r\n                if (!wish.startWish) { /* daca e false , adaugam la startAmount */\r\n                    setStartAmount(parseInt(wish.money) + startAmount)\r\n                    setTotalAmount(parseInt(wish.money) + totalAmount)\r\n                    return { ...wish, startWish: !wish.startWish }\r\n                }\r\n            }\r\n            /*daca startWish e true, atunci schimbam valoarea */\r\n            return wish;        /* daca nu, returnam si se va forma tot un array de obiecte */\r\n        })\r\n        setWishes(_wishes)   /* vom updata array ul de obiecte cu noul array de obiecte */\r\n    }\r\n\r\n    function finishWish(id) {\r\n        const finish = wishes.map((wish) => {\r\n            if (wish.id === id) {\r\n                if (wish.startWish && !wish.finishWish) {\r\n                    setStartAmount(startAmount - wish.money)\r\n                    return { ...wish, finishWish: !wish.finishWish }\r\n                }\r\n            }\r\n            return wish;\r\n        })\r\n        setWishes(finish)\r\n    }\r\n\r\n    function deleteWish(id) {\r\n        const _wishes = wishes.filter(wish => wish.id !== id)    //selectam wishes ca sa scapam de wish ul cu id pe care vrem sa l stergem \r\n        const deletedWish = wishes.find(wish => wish.id === id)\r\n        setWishes(_wishes)\r\n\r\n        if (deletedWish.finishWish) {\r\n            setTotalAmount(totalAmount - deletedWish.money)\r\n            console.log(\"prima\")\r\n        }\r\n\r\n        if (deletedWish.startWish && !deletedWish.finishWish) {\r\n            setTotalAmount(totalAmount - deletedWish.money)\r\n            setStartAmount(startAmount - deletedWish.money)\r\n            console.log(\"doi\")\r\n        }\r\n    }\r\n\r\n    function editWish(id) {\r\n        const _wishes = wishes.map(wish => {\r\n            if (wish.id === id) {\r\n                return { ...wish, edit: true, wishText: wish.wishText }\r\n            }\r\n            return wish;\r\n        })\r\n        setWishes(_wishes)\r\n    }\r\n\r\n    function editInputWish(e, id) {  /* pentru a schimba valoarea inputului (onChange) */\r\n        const _wishes = wishes.map(wish => {\r\n            if (wish.id === id) {\r\n                return { ...wish, edit: true, wishText: e.target.value }\r\n            }\r\n            return wish;\r\n        })\r\n        setWishes(_wishes)\r\n    }\r\n    function setUpdateWish(id) {\r\n\r\n        const update = wishes.map((wish) => {\r\n            if (wish.id === id) {\r\n                return { ...wish, edit: false }\r\n            }\r\n            return wish\r\n        })\r\n        setWishes(update)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header startAmount={startAmount} totalAmount={totalAmount} />\r\n            <section>\r\n                <h1>Wish List</h1>\r\n                <div>\r\n                    <FormComponent addWishSubmit={addWishSubmit} />\r\n                    <WishesComponent editInputWish={editInputWish} setUpdateWish={setUpdateWish} wishes={wishes} startwish={startwish} editWish={editWish} deleteWish={deleteWish} finishWish={finishWish} />\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectForm\r\n"]},"metadata":{},"sourceType":"module"}